@page "/pages/message"
@using Microsoft.AspNetCore.Mvc.Filters
@using Microsoft.AspNetCore.Mvc.RazorPages
@using SportsStore.Web.Filters
@model MessageModel

@functions
{
    [RequireHttps]
    [SimpleCache]
    public class MessageModel : PageModel
    {
        public object Message { get; set; } = $"{DateTime.Now.ToLongTimeString()}: This is the Message Razor Page";

        public void OnGet(string message1, string message2)
        {
            Message = $"{message1}, {message2}";
        }

        public override void OnPageHandlerExecuting(PageHandlerExecutingContext context)
        {
            if (context.HandlerArguments.ContainsKey("message1"))
            {
                context.HandlerArguments["message1"] = "New message";
            }
        }
    }
}

@if (Model.Message is string)
 {
    @Model.Message
 } 
 else if (Model.Message is IDictionary<string, string>)
 {
    var dict = Model.Message as IDictionary<string, string>;
    <table class="table table-sm table-striped table-bordered">
        <thead><tr><th>Name</th><th>Value</th></tr></thead>
        <tbody>
            @foreach (var kpv in dict)
             {
                <tr><td>@kpv.Key</td><td>@kpv.Value</td></tr>
             }
        </tbody>
    </table>
 }